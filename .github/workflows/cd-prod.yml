name: CI Production Pipeline

on:
  push:
    branches:
      - production

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: findus
          POSTGRES_PASSWORD: findus123
          POSTGRES_DB: findus_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgres://findus:findus123@localhost:5432/findus_db
        run: |
          pytest --cov=apps --cov-report=xml

      - name: Check coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          coverage_command: pytest --cov=apps
          coverage_variable: COVERAGE
          coverage_target: 85%

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/findus_backend:latest

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Aqu√≠ puedes agregar el comando para desplegar en tu proveedor de la nube (AWS, GCP, etc.)